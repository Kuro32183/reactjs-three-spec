{"ast":null,"code":"import _toConsumableArray from \"/Users/mac/Desktop/react-3js-word-sphere/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/mac/Desktop/react-3js-word-sphere/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _createClass from \"/Users/mac/Desktop/react-3js-word-sphere/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/Users/mac/Desktop/react-3js-word-sphere/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\nfunction useMeasure(_temp) {\n  var _ref = _temp === void 0 ? {\n      debounce: 0,\n      scroll: false,\n      offsetSize: false\n    } : _temp,\n    debounce = _ref.debounce,\n    scroll = _ref.scroll,\n    polyfill = _ref.polyfill,\n    offsetSize = _ref.offsetSize;\n  var ResizeObserver = polyfill || (typeof window === 'undefined' ? /*#__PURE__*/_createClass(function ResizeObserver() {\n    _classCallCheck(this, ResizeObserver);\n  }) : window.ResizeObserver);\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n  var _useState = useState({\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0,\n      bottom: 0,\n      right: 0,\n      x: 0,\n      y: 0\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    bounds = _useState2[0],\n    set = _useState2[1]; // keep all state in a ref\n\n  var state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  var scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  var resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  var mounted = useRef(false);\n  useEffect(function () {\n    mounted.current = true;\n    return function () {\n      return void (mounted.current = false);\n    };\n  }); // memoize handlers, so event-listeners know when they should update\n\n  var _useMemo = useMemo(function () {\n      var callback = function callback() {\n        if (!state.current.element) return;\n        var _state$current$elemen = state.current.element.getBoundingClientRect(),\n          left = _state$current$elemen.left,\n          top = _state$current$elemen.top,\n          width = _state$current$elemen.width,\n          height = _state$current$elemen.height,\n          bottom = _state$current$elemen.bottom,\n          right = _state$current$elemen.right,\n          x = _state$current$elemen.x,\n          y = _state$current$elemen.y;\n        var size = {\n          left: left,\n          top: top,\n          width: width,\n          height: height,\n          bottom: bottom,\n          right: right,\n          x: x,\n          y: y\n        };\n        if (state.current.element instanceof HTMLElement && offsetSize) {\n          size.height = state.current.element.offsetHeight;\n          size.width = state.current.element.offsetWidth;\n        }\n        Object.freeze(size);\n        if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n      };\n      return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n    }, [set, offsetSize, scrollDebounce, resizeDebounce]),\n    _useMemo2 = _slicedToArray(_useMemo, 3),\n    forceRefresh = _useMemo2[0],\n    resizeChange = _useMemo2[1],\n    scrollChange = _useMemo2[2]; // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(function (element) {\n        return element.removeEventListener('scroll', scrollChange, true);\n      });\n      state.current.scrollContainers = null;\n    }\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(function (scrollContainer) {\n        return scrollContainer.addEventListener('scroll', scrollChange, {\n          capture: true,\n          passive: true\n        });\n      });\n    }\n  } // the ref we expose to the user\n\n  var ref = function ref(node) {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(function () {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(function () {\n    return removeListeners;\n  }, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(function () {\n    var cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return function () {\n      return void window.removeEventListener('resize', cb);\n    };\n  }, [onWindowResize]);\n}\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(function () {\n    if (enabled) {\n      var cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return function () {\n        return void window.removeEventListener('scroll', cb, true);\n      };\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\nfunction findScrollContainers(element) {\n  var result = [];\n  if (!element || element === document.body) return result;\n  var _window$getComputedSt = window.getComputedStyle(element),\n    overflow = _window$getComputedSt.overflow,\n    overflowX = _window$getComputedSt.overflowX,\n    overflowY = _window$getComputedSt.overflowY;\n  if ([overflow, overflowX, overflowY].some(function (prop) {\n    return prop === 'auto' || prop === 'scroll';\n  })) result.push(element);\n  return [].concat(result, _toConsumableArray(findScrollContainers(element.parentElement)));\n} // Checks if element boundaries are equal\n\nvar keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\nvar areBoundsEqual = function areBoundsEqual(a, b) {\n  return keys.every(function (key) {\n    return a[key] === b[key];\n  });\n};\nexport { useMeasure as default };","map":{"version":3,"names":["useState","useRef","useEffect","useMemo","createDebounce","useMeasure","_temp","debounce","scroll","offsetSize","polyfill","ResizeObserver","window","Error","left","top","width","height","bottom","right","x","y","bounds","set","state","element","scrollContainers","resizeObserver","lastBounds","scrollDebounce","resizeDebounce","resize","mounted","current","callback","getBoundingClientRect","size","HTMLElement","offsetHeight","offsetWidth","Object","freeze","areBoundsEqual","forceRefresh","resizeChange","scrollChange","removeListeners","forEach","removeEventListener","disconnect","addListeners","observe","scrollContainer","addEventListener","capture","passive","ref","node","findScrollContainers","useOnWindowScroll","Boolean","useOnWindowResize","onWindowResize","cb","onScroll","enabled","result","document","body","getComputedStyle","overflow","overflowX","overflowY","some","prop","push","parentElement","keys","a","b","every","key","default"],"sources":["/Users/mac/Desktop/react-3js-word-sphere/node_modules/react-use-measure/dist/web.js"],"sourcesContent":["import { useState, useRef, useEffect, useMemo } from 'react';\nimport createDebounce from 'debounce';\n\nfunction useMeasure(_temp) {\n  let {\n    debounce,\n    scroll,\n    polyfill,\n    offsetSize\n  } = _temp === void 0 ? {\n    debounce: 0,\n    scroll: false,\n    offsetSize: false\n  } : _temp;\n  const ResizeObserver = polyfill || (typeof window === 'undefined' ? class ResizeObserver {} : window.ResizeObserver);\n\n  if (!ResizeObserver) {\n    throw new Error('This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills');\n  }\n\n  const [bounds, set] = useState({\n    left: 0,\n    top: 0,\n    width: 0,\n    height: 0,\n    bottom: 0,\n    right: 0,\n    x: 0,\n    y: 0\n  }); // keep all state in a ref\n\n  const state = useRef({\n    element: null,\n    scrollContainers: null,\n    resizeObserver: null,\n    lastBounds: bounds\n  }); // set actual debounce values early, so effects know if they should react accordingly\n\n  const scrollDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.scroll : null;\n  const resizeDebounce = debounce ? typeof debounce === 'number' ? debounce : debounce.resize : null; // make sure to update state only as long as the component is truly mounted\n\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => void (mounted.current = false);\n  }); // memoize handlers, so event-listeners know when they should update\n\n  const [forceRefresh, resizeChange, scrollChange] = useMemo(() => {\n    const callback = () => {\n      if (!state.current.element) return;\n      const {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      } = state.current.element.getBoundingClientRect();\n      const size = {\n        left,\n        top,\n        width,\n        height,\n        bottom,\n        right,\n        x,\n        y\n      };\n\n      if (state.current.element instanceof HTMLElement && offsetSize) {\n        size.height = state.current.element.offsetHeight;\n        size.width = state.current.element.offsetWidth;\n      }\n\n      Object.freeze(size);\n      if (mounted.current && !areBoundsEqual(state.current.lastBounds, size)) set(state.current.lastBounds = size);\n    };\n\n    return [callback, resizeDebounce ? createDebounce(callback, resizeDebounce) : callback, scrollDebounce ? createDebounce(callback, scrollDebounce) : callback];\n  }, [set, offsetSize, scrollDebounce, resizeDebounce]); // cleanup current scroll-listeners / observers\n\n  function removeListeners() {\n    if (state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(element => element.removeEventListener('scroll', scrollChange, true));\n      state.current.scrollContainers = null;\n    }\n\n    if (state.current.resizeObserver) {\n      state.current.resizeObserver.disconnect();\n      state.current.resizeObserver = null;\n    }\n  } // add scroll-listeners / observers\n\n\n  function addListeners() {\n    if (!state.current.element) return;\n    state.current.resizeObserver = new ResizeObserver(scrollChange);\n    state.current.resizeObserver.observe(state.current.element);\n\n    if (scroll && state.current.scrollContainers) {\n      state.current.scrollContainers.forEach(scrollContainer => scrollContainer.addEventListener('scroll', scrollChange, {\n        capture: true,\n        passive: true\n      }));\n    }\n  } // the ref we expose to the user\n\n\n  const ref = node => {\n    if (!node || node === state.current.element) return;\n    removeListeners();\n    state.current.element = node;\n    state.current.scrollContainers = findScrollContainers(node);\n    addListeners();\n  }; // add general event listeners\n\n\n  useOnWindowScroll(scrollChange, Boolean(scroll));\n  useOnWindowResize(resizeChange); // respond to changes that are relevant for the listeners\n\n  useEffect(() => {\n    removeListeners();\n    addListeners();\n  }, [scroll, scrollChange, resizeChange]); // remove all listeners when the components unmounts\n\n  useEffect(() => removeListeners, []);\n  return [ref, bounds, forceRefresh];\n} // Adds native resize listener to window\n\n\nfunction useOnWindowResize(onWindowResize) {\n  useEffect(() => {\n    const cb = onWindowResize;\n    window.addEventListener('resize', cb);\n    return () => void window.removeEventListener('resize', cb);\n  }, [onWindowResize]);\n}\n\nfunction useOnWindowScroll(onScroll, enabled) {\n  useEffect(() => {\n    if (enabled) {\n      const cb = onScroll;\n      window.addEventListener('scroll', cb, {\n        capture: true,\n        passive: true\n      });\n      return () => void window.removeEventListener('scroll', cb, true);\n    }\n  }, [onScroll, enabled]);\n} // Returns a list of scroll offsets\n\n\nfunction findScrollContainers(element) {\n  const result = [];\n  if (!element || element === document.body) return result;\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = window.getComputedStyle(element);\n  if ([overflow, overflowX, overflowY].some(prop => prop === 'auto' || prop === 'scroll')) result.push(element);\n  return [...result, ...findScrollContainers(element.parentElement)];\n} // Checks if element boundaries are equal\n\n\nconst keys = ['x', 'y', 'top', 'bottom', 'left', 'right', 'width', 'height'];\n\nconst areBoundsEqual = (a, b) => keys.every(key => a[key] === b[key]);\n\nexport { useMeasure as default };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}